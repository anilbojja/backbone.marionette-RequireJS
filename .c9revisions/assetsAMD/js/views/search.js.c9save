{"ts":1345928801207,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// search.js: Ted Killilea June 2012  @t2k_nyc\n// view depends upon app and backbone\ndefine(['require', 'app', 'backbone'], function (require, MyApp, Backbone) {\n    'use strict';\n\n    var SearchView =  Backbone.View.extend({\n        el: \"#searchBar\",\n\n        initialize: function () {\n            var self = this;\n            var $spinner = self.$('#spinner');\n            MyApp.vent.on(\"search:start\", function () {\n                $spinner.fadeIn();\n            });\n            MyApp.vent.on(\"search:stop\", function () {\n                $spinner.fadeOut();\n            });\n            MyApp.vent.on(\"search:term\", function (term) {\n                self.$('#searchTerm').val(term);\n            });\n        },\n\n        events: {\n            'change #searchTerm': 'search'\n        },\n\n        search: function () {\n            var searchTerm = this.$('#searchTerm').val().trim();\n            if (searchTerm.length > 0) {\n                MyApp.vent.trigger(\"search:term\", searchTerm);\n            }\n            else {\n                MyApp.vent.trigger(\"search:noSearchTerm\");\n            }\n        }\n    });\n\n        // one time init for our applicaiton\n    MyApp.vent.on(\"layout:rendered\", function () {\n        console.log('vent.on  setup searchview...');\n        // render a view for the existing HTML in the template, and attach it to the layout (i.e. don't double render)\n        var searchView = new SearchView();\n        require('controllers/libraryapp').layout.search.attachView(searchView);\n    });\n\n    return SearchView;\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1537}]],"length":1537}
