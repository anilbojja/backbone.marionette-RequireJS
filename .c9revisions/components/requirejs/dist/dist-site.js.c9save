{"ts":1354077476348,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * @license RequireJS Copyright (c) 2010-2011, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/requirejs for details\n */\n\n/*\nTo run this file:\n\n> node dist-site.js\n\n*/\n\n/*jslint regexp: false, nomen: false, plusplus: false, strict: false */\n/*global require: false, console: false */\n\nvar files, htmlFile, transFile, fileContents,\n    preContents, postContents, h1, homePath, cssPath,\n    ieCssPath, jsPath, length, j, title,\n    isTopPage = false,\n    fileIndex = 0,\n    h1RegExp = /<h1>([^<]+)<\\/h1>/,\n    file = require('./file'),\n    child_process = require('child_process');\n\n//Copy all the text files to a dist directory\n//file.deleteFile(\"./dist-site/\");\nfile.copyFile(\"init.js\", \"./dist-site/init.js\");\nfile.copyDir(\"fonts\", \"./dist-site/fonts\", /\\w/);\nfile.copyFile(\"../index.html\", \"./dist-site/index.html\");\nfile.copyDir(\"../docs/\", \"./dist-site/docs/\", /\\w/);\n\npreContents = file.readFile(\"pre.html\");\npostContents = file.readFile(\"post.html\");\n\n//Convert each .html file to a full HTML file\nfiles = file.getFilteredFileList(\"./dist-site\", /\\.html$/, true);\n\nfunction processFile() {\n    htmlFile = files[fileIndex];\n    fileIndex += 1;\n    if (!htmlFile) {\n        //Done processing files.\n        return;\n    }\n\n    transFile = htmlFile + '.trans';\n\n    console.log(\"Creating \" + htmlFile);\n\n    //Do Markdown\n    child_process.exec(\n        \"./Markdown.pl --html4tags \" + htmlFile + \" > \" + transFile,\n        function (error, stdout, stderr) {\n            if (error) {\n                console.log('Could not markdown ' + htmlFile);\n                processFile();\n                return;\n            }\n\n            //Build up a complete HTML file.\n            fileContents = file.readFile(transFile);\n\n            //Find the page title.\n            title = h1RegExp.exec(fileContents);\n            title = title && title[1];\n\n            fileContents = preContents + fileContents + postContents;\n\n            //Set the title of the HTML page\n            h1 = fileContents.match(/<h1>([^<]+)<\\/h1>/);\n            if (h1 && h1[1]) {\n                h1 = h1[1];\n            } else {\n                h1 = \"\";\n            }\n\n            fileContents = fileContents.replace(/\\$\\{title\\}/, h1);\n\n            //Change any .md references to .html references, and remove tree/master\n            //links\n            fileContents = fileContents\n                           .replace(/href=\"requirejs\\/tree\\/master\\/docs\\//g, 'href=\"docs/')\n                           .replace(/href=\"([^\"]+)\\.md/g, 'href=\"$1.html');\n\n            //Adjust the path the home and main.css\n            homePath = htmlFile.replace(/\\/[^\\/]+$/, \"\").replace(/^\\.\\/dist-site\\//, \"\");\n            if (!homePath || homePath === \"dist-site\") {\n                isTopPage = true;\n                homePath = \"./\";\n                cssPath = \"main.css\";\n                ieCssPath = \"ie.css\";\n                jsPath = \"init.js\";\n            } else {\n                isTopPage = false;\n                length = homePath.split(\"/\").length;\n                homePath = \"\";\n                for (j = 0; j < length - 1; j++) {\n                    homePath += \"../\";\n                }\n                cssPath = homePath + \"main.css\";\n                ieCssPath = homePath + \"ie.css\";\n                jsPath = homePath + \"init.js\";\n            }\n            fileContents = fileContents.replace(/HOMEPATH/g, homePath);\n            fileContents = fileContents.replace(/\\main\\.css/, cssPath);\n            fileContents = fileContents.replace(/\\ie\\.css/, ieCssPath);\n            fileContents = fileContents.replace(/\\init\\.js/, jsPath);\n\n            //Set the page title to be the first h1 tag name\n            if (title) {\n                fileContents = fileContents.replace(/<title>[^<]*<\\/title>/, '<title>' + title + '</title>');\n            }\n\n            //If it is the top page, adjust the header links\n            if (isTopPage) {\n                fileContents = fileContents\n                               .replace(/href=\"\\.\\.\\/\"/g, 'href=\"./\"')\n                               .replace(/class=\"local\" href=\"([^\"]+)\"/g, 'class=\"local\" href=\"docs/$1\"');\n            }\n\n            file.saveFile(htmlFile, fileContents);\n\n            file.deleteFile(transFile);\n\n            processFile();\n        }\n    );\n}\n\nprocessFile();\n"]],"start1":0,"start2":0,"length1":0,"length2":4358}]],"length":4358}
