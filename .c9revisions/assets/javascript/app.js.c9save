{"ts":1348750713616,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"MyApp = new Backbone.Marionette.Application();\n\n// see http://lostechies.com/derickbailey/2012/04/17/managing-a-modal-dialog-with-backbone-and-marionette/\nvar ModalRegion = Backbone.Marionette.Region.extend({\n    el: \"#modal\",\n\n    constructor: function () {\n        _.bindAll(this);\n        Backbone.Marionette.Region.prototype.constructor.apply(this, arguments);\n        this.on(\"view:show\", this.showModal, this);\n    },\n\n    getEl: function (selector) {\n        var $el = $(selector);\n        $el.on(\"hidden\", this.close);\n        return $el;\n    },\n\n    showModal: function (view) {\n        view.on(\"close\", this.hideModal, this);\n        this.$el.modal('show');\n    },\n\n    hideModal: function () {\n        this.$el.modal('hide');\n    }\n});\n\nMyApp.addRegions({\n    content: \"#content\",\n    menu: \"#menu\",\n    modal: ModalRegion\n});\n\nMyApp.MenuView = Backbone.Marionette.View.extend({\n    el: \"#menu\",\n\n    events: {\n        'click #menu .js-menu-books': 'showLibraryApp',\n        'click #menu .js-menu-close': 'closeApp'\n    },\n\n    showLibraryApp: function (e) {\n        e.preventDefault();\n        MyApp.LibraryApp.defaultSearch();\n    },\n\n    closeApp: function (e) {\n        e.preventDefault();\n        MyApp.Closer.close();\n    }\n});\n\nMyApp.vent.on(\"layout:rendered\", function () {\n    var menu = new MyApp.MenuView();\n    MyApp.menu.attachView(menu);\n});\n\nMyApp.vent.on(\"routing:started\", function () {\n    if (!Backbone.History.started) Backbone.history.start();\n});"]],"start1":0,"start2":0,"length1":0,"length2":1479}]],"length":1479}
