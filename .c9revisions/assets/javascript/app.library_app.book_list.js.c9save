{"ts":1348154538889,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"MyApp.LibraryApp.BookList = function(){\n  var BookList = {};\n\n  var BookDetailView = Backbone.Marionette.ItemView.extend({\n    template: \"#book-detail-template\",\n    className: \"modal bookDetail\"\n  });\n\n  var BookView = Backbone.Marionette.ItemView.extend({\n    template: \"#book-template\",\n\n    events: {\n      'click': 'showBookDetail'\n    },\n\n    showBookDetail: function(){\n      var detailView = new BookDetailView({model: this.model});\n      MyApp.modal.show(detailView);\n    }\n  });\n\n  var BookListView = Backbone.Marionette.CompositeView.extend({\n    template: \"#book-list-template\",\n    id: \"bookList\",\n    itemView: BookView,\n\n    initialize: function(){\n      _.bindAll(this, \"showMessage\", \"loadMoreBooks\");\n      var self = this;\n      MyApp.vent.on(\"search:error\", function(){ self.showMessage(\"Error, please retry later :s\") });\n      MyApp.vent.on(\"search:noSearchTerm\", function(){ self.showMessage(\"Hummmm, can do better :)\") });\n      MyApp.vent.on(\"search:noResults\", function(){ self.showMessage(\"No books found\") });\n    },\n\n    events: {\n      'scroll': 'loadMoreBooks'\n    },\n\n    appendHtml: function(collectionView, itemView){\n      collectionView.$(\".books\").append(itemView.el);\n    },\n\n    showMessage: function(message){\n      this.$('.books').html('<h1 class=\"notFound\">' + message + '</h1>');\n    },\n\n    loadMoreBooks: function(){\n      var totalHeight = this.$('> div').height(),\n          scrollTop = this.$el.scrollTop() + this.$el.height(),\n          margin = 200;\n\n      // if we are closer than 'margin' to the end of the content, load more books\n      if (scrollTop + margin >= totalHeight) {\n        MyApp.vent.trigger(\"search:more\");\n      }\n    }\n  });\n\n  var SearchView = Backbone.View.extend({\n    el: \"#searchBar\",\n\n    initialize: function(){\n      var self = this;\n      var $spinner = self.$('#spinner');\n      MyApp.vent.on(\"search:start\", function(){ $spinner.fadeIn(); });\n      MyApp.vent.on(\"search:stop\", function(){ $spinner.fadeOut(); });\n      MyApp.vent.on(\"search:term\", function(term){\n        self.$('#searchTerm').val(term);\n      });\n    },\n\n    events: {\n      'change #searchTerm': 'search'\n    },\n\n    search: function() {\n      var searchTerm = this.$('#searchTerm').val().trim();\n      if(searchTerm.length > 0){\n        MyApp.vent.trigger(\"search:term\", searchTerm);\n      }\n      else{\n        MyApp.vent.trigger(\"search:noSearchTerm\");\n      }\n    }\n  });\n\n  BookList.showBooks = function(books){\n    var bookListView = new BookListView({ collection: books });\n    MyApp.LibraryApp.layout.books.show(bookListView);\n  };\n\n  MyApp.vent.on(\"layout:rendered\", function(){\n    // render a view for the existing HTML in the template, and attach it to the layout (i.e. don't double render)\n    var searchView = new SearchView();\n    MyApp.LibraryApp.layout.search.attachView(searchView);\n  });\n\n  return BookList;\n}();"]],"start1":0,"start2":0,"length1":0,"length2":2882}]],"length":2882}
